name: CI-Linux

on:  
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:  
  build-linux:
    runs-on: ubuntu-latest
    steps:      
      - uses: actions/checkout@v2      
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - name: debug build
        run: dotnet build -c Debug
      - name: unit tests
        run: dotnet test --filter 'FullyQualifiedName!~PerformanceTest' --test-adapter-path:. --logger:'junit;LogFilePath=..\TestResults\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose' /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:MergeWith='../TestResults/coverage.json' /p:CoverletOutputFormat=\"lcov,json\" -m:1
      - name: release build
        run: dotnet build -c Release -o build
      - name: performance tests
        run: dotnet test build/Arnible.MathModeling.PerformanceTest.dll --test-adapter-path:. --logger:"junit;LogFilePath=TestResults/{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
        env:
          arnible_skip_output: 'yes'
      - name: publish results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          check_name: 'Unit Tests Results for Linux'
          files: ./TestResults/*test-result.xml
      - name: Publish coverage report
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./TestResults/coverage.info      
