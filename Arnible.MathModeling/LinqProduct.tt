<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".tt.cs" #>
<#

string[] generatedTypes = new[] { "double", "Number" };

#>
using System;
using System.Collections.Generic;

namespace Arnible.MathModeling
{
  public static class LinqProduct
  {
<#

foreach(string typeName in generatedTypes)
{

#>
    /// <summary>
    /// Calculate items product or throw ArgumentException if passed enumerable is empty
    /// </summary>
    public static <#= typeName #> ProductDefensive(this IEnumerable<<#= typeName #>> x)
    {
      if (x == null)
      {
        throw new ArgumentNullException(nameof(x));
      }
      bool anyElement = false;
      <#= typeName #> current = 1;
      foreach (<#= typeName #> v in x)
      {
        current *= v;
        anyElement = true;
      }
      if (!anyElement)
      {
        throw new ArgumentException("Empty enumerator");
      }
      return current;
    }

    /// <summary>
    /// Calculate items product or return 1 if passed enumerable is empty
    /// </summary>
    public static <#= typeName #> ProductWithDefault(this IEnumerable<<#= typeName #>> x)
    {
      if (x == null)
      {
        throw new ArgumentNullException(nameof(x));
      }
      <#= typeName #> current = 1;
      foreach (<#= typeName #> v in x)
      {
        current *= v;
      }
      return current;
    }

<#

}

#>
  }
}
